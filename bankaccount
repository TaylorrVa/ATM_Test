public abstract class BankAccount {
    private String accountNumber;
    private String clientID;
    private double balance;

    public BankAccount(String accountNumber,  String clientID, double initialBalance) {
        this.accountNumber = accountNumber;
        this.accountHolder = clientID;
        this.balance = initialBalance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getClientID() {
        return clientID;
    }

    public double getBalance() {
        return balance;
    }

    protected void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
        } else {
            throw new IllegalArgumentException("Deposit amount must be positive.");
        }
    }

    protected void withdraw(double amount) {
        if (amount < 0) {
            throw new IllegalArgumentException("Invalid withdrawal amount.");
        } else if (amount > balance) {
            throw new IllegalArgumentException("Transication cancelled. Insufficienct funds.");
        } else {
            balance -= amount;
        }
    }

    public abstract void applyInterest();
}